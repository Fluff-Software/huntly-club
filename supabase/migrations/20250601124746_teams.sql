create table "public"."packs" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "colour" text
);


alter table "public"."packs" enable row level security;

create table "public"."profiles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null,
    "name" text not null,
    "colour" text not null,
    "xp" integer not null default 0,
    "team" bigint not null
);


alter table "public"."profiles" enable row level security;

create table "public"."teams" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "mascot_name" text not null,
    "colour" text
);


alter table "public"."teams" enable row level security;

CREATE UNIQUE INDEX packs_pkey ON public.packs USING btree (id);

CREATE UNIQUE INDEX profiles_pkey ON public.profiles USING btree (id);

CREATE UNIQUE INDEX teams_pkey ON public.teams USING btree (id);

alter table "public"."packs" add constraint "packs_pkey" PRIMARY KEY using index "packs_pkey";

alter table "public"."profiles" add constraint "profiles_pkey" PRIMARY KEY using index "profiles_pkey";

alter table "public"."teams" add constraint "teams_pkey" PRIMARY KEY using index "teams_pkey";

alter table "public"."profiles" add constraint "profiles_team_fkey" FOREIGN KEY (team) REFERENCES teams(id) not valid;

alter table "public"."profiles" validate constraint "profiles_team_fkey";

alter table "public"."profiles" add constraint "profiles_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."profiles" validate constraint "profiles_user_id_fkey";

grant delete on table "public"."packs" to "anon";

grant insert on table "public"."packs" to "anon";

grant references on table "public"."packs" to "anon";

grant select on table "public"."packs" to "anon";

grant trigger on table "public"."packs" to "anon";

grant truncate on table "public"."packs" to "anon";

grant update on table "public"."packs" to "anon";

grant delete on table "public"."packs" to "authenticated";

grant insert on table "public"."packs" to "authenticated";

grant references on table "public"."packs" to "authenticated";

grant select on table "public"."packs" to "authenticated";

grant trigger on table "public"."packs" to "authenticated";

grant truncate on table "public"."packs" to "authenticated";

grant update on table "public"."packs" to "authenticated";

grant delete on table "public"."packs" to "service_role";

grant insert on table "public"."packs" to "service_role";

grant references on table "public"."packs" to "service_role";

grant select on table "public"."packs" to "service_role";

grant trigger on table "public"."packs" to "service_role";

grant truncate on table "public"."packs" to "service_role";

grant update on table "public"."packs" to "service_role";

grant delete on table "public"."profiles" to "anon";

grant insert on table "public"."profiles" to "anon";

grant references on table "public"."profiles" to "anon";

grant select on table "public"."profiles" to "anon";

grant trigger on table "public"."profiles" to "anon";

grant truncate on table "public"."profiles" to "anon";

grant update on table "public"."profiles" to "anon";

grant delete on table "public"."profiles" to "authenticated";

grant insert on table "public"."profiles" to "authenticated";

grant references on table "public"."profiles" to "authenticated";

grant select on table "public"."profiles" to "authenticated";

grant trigger on table "public"."profiles" to "authenticated";

grant truncate on table "public"."profiles" to "authenticated";

grant update on table "public"."profiles" to "authenticated";

grant delete on table "public"."profiles" to "service_role";

grant insert on table "public"."profiles" to "service_role";

grant references on table "public"."profiles" to "service_role";

grant select on table "public"."profiles" to "service_role";

grant trigger on table "public"."profiles" to "service_role";

grant truncate on table "public"."profiles" to "service_role";

grant update on table "public"."profiles" to "service_role";

grant delete on table "public"."teams" to "anon";

grant insert on table "public"."teams" to "anon";

grant references on table "public"."teams" to "anon";

grant select on table "public"."teams" to "anon";

grant trigger on table "public"."teams" to "anon";

grant truncate on table "public"."teams" to "anon";

grant update on table "public"."teams" to "anon";

grant delete on table "public"."teams" to "authenticated";

grant insert on table "public"."teams" to "authenticated";

grant references on table "public"."teams" to "authenticated";

grant select on table "public"."teams" to "authenticated";

grant trigger on table "public"."teams" to "authenticated";

grant truncate on table "public"."teams" to "authenticated";

grant update on table "public"."teams" to "authenticated";

grant delete on table "public"."teams" to "service_role";

grant insert on table "public"."teams" to "service_role";

grant references on table "public"."teams" to "service_role";

grant select on table "public"."teams" to "service_role";

grant trigger on table "public"."teams" to "service_role";

grant truncate on table "public"."teams" to "service_role";

grant update on table "public"."teams" to "service_role";

create policy "Enable read access for all users"
on "public"."packs"
as permissive
for select
to public
using (true);



